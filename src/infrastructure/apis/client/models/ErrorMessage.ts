/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ErrorCodes } from './ErrorCodes';
import {
    ErrorCodesFromJSON,
    ErrorCodesFromJSONTyped,
    ErrorCodesToJSON,
} from './ErrorCodes';
import type { HttpStatusCode } from './HttpStatusCode';
import {
    HttpStatusCodeFromJSON,
    HttpStatusCodeFromJSONTyped,
    HttpStatusCodeToJSON,
} from './HttpStatusCode';

/**
 * 
 * @export
 * @interface ErrorMessage
 */
export interface ErrorMessage {
    /**
     * 
     * @type {string}
     * @memberof ErrorMessage
     */
    message?: string;
    /**
     * 
     * @type {ErrorCodes}
     * @memberof ErrorMessage
     */
    code?: ErrorCodes;
    /**
     * 
     * @type {HttpStatusCode}
     * @memberof ErrorMessage
     */
    status?: HttpStatusCode;
}

/**
 * Check if a given object implements the ErrorMessage interface.
 */
export function instanceOfErrorMessage(value: object): boolean {
    return true;
}

export function ErrorMessageFromJSON(json: any): ErrorMessage {
    return ErrorMessageFromJSONTyped(json, false);
}

export function ErrorMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorMessage {
    if (json == null) {
        return json;
    }
    return {
        
        'message': json['message'] == null ? undefined : json['message'],
        'code': json['code'] == null ? undefined : ErrorCodesFromJSON(json['code']),
        'status': json['status'] == null ? undefined : HttpStatusCodeFromJSON(json['status']),
    };
}

export function ErrorMessageToJSON(value?: ErrorMessage | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'message': value['message'],
        'code': ErrorCodesToJSON(value['code']),
        'status': HttpStatusCodeToJSON(value['status']),
    };
}

